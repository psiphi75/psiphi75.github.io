{"version":3,"sources":["components/Banner.js","components/Card.js","components/CardList.js","components/purchase/Quote.js","components/purchase/UserDetails.js","components/purchase/Payment.js","components/purchase/Success.js","components/purchase/Purchase.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Banner","Jumbotron","className","Component","Card","props","card","title","image","text","button","showQuoteButton","Button","variant","Img","src","Body","Title","Text","CardList","state","cards","cardList","this","map","key","Container","Row","CardDeck","Quote","premiumCalculation","numBananas","handleChange","e","target","value","parseInt","id","setState","price","console","error","handleNext","preventDefault","nextStep","quote","toFixed","Form","onSubmit","Group","Control","type","placeholder","onChange","onClick","UserDetails","handleBack","prevStep","userdetails","as","Col","controlId","Label","firstname","lastname","email","md","Payment","handlePurchase","payment","maxlength","ccNumber","ccName","ccExpiry","ccCvv","Success","Purchase","stepId","label","newState","paymentSteps","xs","Header","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4a00479e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Banner extends Component {\n    render() {\n        return (\n            <Jumbotron className=\"banner text-center\">\n                <h1>Banana Cover Insurance</h1>\n                <p>Insure your precious banana</p>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default Banner;\n","import React from 'react';\nimport BsCard from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst Card = props => {\n    const { title, image, text, showQuoteButton } = props.card;\n\n    let button = showQuoteButton ? <Button variant=\"primary\">Quote</Button> : null;\n\n    return (\n        <BsCard className=\"banana-cove-card\">\n            <BsCard.Img variant=\"top\" src={image} />\n\n            <BsCard.Body>\n                <BsCard.Title>{title}</BsCard.Title>\n                <BsCard.Text>{text}</BsCard.Text>\n                {button}\n            </BsCard.Body>\n        </BsCard>\n    );\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport Card from './Card';\n\nclass CardList extends Component {\n    state = {\n        cards: [\n            {\n                title: 'Protect Against Crop Damage',\n                showQuoteButton: false,\n                image: 'images/ant-banana.jpg',\n                text:\n                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n            },\n            {\n                title: 'Great Price',\n                showQuoteButton: true,\n                image: 'images/save-money.png',\n                text:\n                    'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n            },\n            {\n                title: 'Excellent Service',\n                showQuoteButton: false,\n                image: 'images/service.png',\n                text:\n                    'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n            }\n        ]\n    };\n\n    render() {\n        const cardList = this.state.cards.map(card => {\n            return <Card card={card} key={card.title} />;\n        });\n        return (\n            <Container className=\"banana-cove-benefits\">\n                <Row>\n                    <CardDeck>{cardList}</CardDeck>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\nimport BsCard from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nclass Quote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...props.quote };\n    }\n\n    premiumCalculation = numBananas => {\n        return numBananas * 0.2;\n    };\n\n    handleChange = e => {\n        if (e.target.value === '') {\n            this.setState({\n                numBananas: null,\n                price: null\n            });\n            return;\n        }\n\n        // FIXME: I would use lodash here to check if it's a number\n        const numBananas = parseInt(e.target.value);\n        if (e.target.id !== 'numBananas' || !(numBananas >= 0)) {\n            console.error('numBananas is not valid');\n            return;\n        }\n\n        this.setState({\n            numBananas,\n            price: this.premiumCalculation(numBananas)\n        });\n    };\n\n    handleNext = e => {\n        e.preventDefault();\n        this.props.nextStep(this.state);\n    };\n\n    render() {\n        const quote =\n            this.state.price > 0 ? (\n                <BsCard.Text>Your one-off price is ${this.state.price.toFixed(2)}.</BsCard.Text>\n            ) : null;\n\n        return (\n            <BsCard.Body className=\"quote\">\n                <BsCard.Title>How many bananas do you want to insure?</BsCard.Title>\n                <BsCard.Text>Save your bananas from perishing. Enter the number of bananas below.</BsCard.Text>\n                <Form onSubmit={this.handleNext}>\n                    <Form.Group>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"42\"\n                            id=\"numBananas\"\n                            onChange={this.handleChange}\n                            value={this.state.numBananas || ''}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share how many bananas you have with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    {quote}\n                    <Button variant=\"primary\" onClick={this.handleNext}>\n                        Buy it\n                    </Button>\n                </Form>\n            </BsCard.Body>\n        );\n    }\n}\n\nexport default Quote;\n","import React, { Component } from 'react';\nimport BsCard from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\nclass UserDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...props.userdetails };\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleBack = e => {\n        e.preventDefault();\n        this.props.prevStep(this.state);\n    };\n\n    handleNext = e => {\n        e.preventDefault();\n        this.props.nextStep(this.state);\n    };\n\n    render() {\n        return (\n            <BsCard.Body className=\"user-details\">\n                <BsCard.Title>Please enter your details</BsCard.Title>\n                <BsCard.Text>We just want to your name and email such that we can contact you.</BsCard.Text>\n\n                <Form onSubmit={this.handleNext}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formFirstname\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                id=\"firstname\"\n                                value={this.state.firstname || ''}\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formLastname\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                id=\"lastname\"\n                                value={this.state.lastname || ''}\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter email\"\n                                id=\"email\"\n                                value={this.state.email || ''}\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"formButtonBack\">\n                            <Button variant=\"outline-primary\" type=\"button\" onClick={this.handleBack}>\n                                Back\n                            </Button>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"2\" controlId=\"formButtonsNext\">\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleNext}>\n                                Next\n                            </Button>\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n            </BsCard.Body>\n        );\n    }\n}\n\nexport default UserDetails;\n","import React, { Component } from 'react';\nimport BsCard from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\nclass Payment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...props.payment };\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    handleBack = e => {\n        e.preventDefault();\n        this.props.prevStep(this.state);\n    };\n\n    handlePurchase = e => {\n        e.preventDefault();\n        this.props.nextStep(this.state);\n    };\n\n    render() {\n        const price = this.props.price.toFixed(2);\n        return (\n            <BsCard.Body className=\"payment-details\">\n                <BsCard.Title>Please enter your payment details</BsCard.Title>\n                <BsCard.Text>This is a secure form and we will not store your credit card details.</BsCard.Text>\n\n                <Form onSubmit={this.handlePurchase}>\n                    <Form.Group controlId=\"formGridCcNumber\">\n                        <Form.Label>Credit Card number</Form.Label>\n                        <Form.Control\n                            maxlength=\"16\"\n                            placeholder=\"0000000000000000\"\n                            type=\"text\"\n                            id=\"ccNumber\"\n                            onChange={this.handleChange}\n                            value={this.state.ccNumber || ''}\n                        />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"formCcName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                maxlength=\"32\"\n                                placeholder=\"Name on your card\"\n                                type=\"text\"\n                                id=\"ccName\"\n                                onChange={this.handleChange}\n                                value={this.state.ccName || ''}\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} md=\"3\" controlId=\"formCcExpiry\">\n                            <Form.Label>Expiry</Form.Label>\n                            <Form.Control\n                                maxlength=\"5\"\n                                placeholder=\"MM/YY\"\n                                type=\"text\"\n                                id=\"ccExpiry\"\n                                onChange={this.handleChange}\n                                value={this.state.ccExpiry || ''}\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} md=\"3\" controlId=\"formCcCvv\">\n                            <Form.Label>CVV</Form.Label>\n                            <Form.Control\n                                maxlength=\"3\"\n                                placeholder=\"123\"\n                                type=\"text\"\n                                id=\"ccCvv\"\n                                onChange={this.handleChange}\n                                value={this.state.ccCvv || ''}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"formButtonBack\">\n                            <Button variant=\"outline-primary\" type=\"button\" onClick={this.handleBack}>\n                                Back\n                            </Button>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\" controlId=\"formButtonsNext\">\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handlePurchase}>\n                                Purchase ${price}\n                            </Button>\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n            </BsCard.Body>\n        );\n    }\n}\n\nexport default Payment;\n","import React from 'react';\nimport BsCard from 'react-bootstrap/Card';\n\nconst Success = () => {\n    return (\n        <BsCard.Body className=\"purchase-success\">\n            <BsCard.Title>Thank you</BsCard.Title>\n            <BsCard.Text>\n                <b>Great!</b> You are insured. Your next batch of bannas are safe. Expect a confirmation email shortly.\n            </BsCard.Text>\n        </BsCard.Body>\n    );\n};\n\nexport default Success;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BsCard from 'react-bootstrap/Card';\n\nimport Quote from './Quote';\nimport UserDetails from './UserDetails';\nimport Payment from './Payment';\nimport Success from './Success';\n\nclass Purchase extends Component {\n    state = {\n        stepId: 0, // Which step through the process we are.  NOTE: This should be more sophisticated than just a number\n\n        // NOTE: These states below are \"shared\" with child components, there must be a better way\n        quote: {\n            label: 'quote',\n            numBananas: null,\n            price: null\n        },\n\n        userdetails: {\n            label: 'userdetails',\n            firstname: null,\n            lastname: null,\n            email: null\n        },\n\n        payment: {\n            label: 'payment',\n            ccNumber: null,\n            ccExpiry: null,\n            ccName: null,\n            ccCvv: null\n        }\n    };\n\n    nextStep = newState => {\n        if (this.state.stepId >= 3) {\n            console.error('Never expected this');\n        }\n        this.setState({\n            stepId: this.state.stepId + 1,\n            [newState.label]: newState // NOTE: This seems to be poor, since it's tightly coupled with the child component\n        });\n    };\n\n    prevStep = newState => {\n        if (this.state.stepId === 0) {\n            console.error('Never expected this');\n        }\n        this.setState({ stepId: this.state.stepId - 1, [newState.label]: newState });\n    };\n\n    render() {\n        const paymentSteps = [\n            <Quote quote={this.state.quote} nextStep={this.nextStep} />,\n            <UserDetails userdetails={this.state.userdetails} prevStep={this.prevStep} nextStep={this.nextStep} />,\n            <Payment\n                payment={this.state.payment}\n                price={this.state.quote.price} // Need to display the price when making payment\n                prevStep={this.prevStep}\n                nextStep={this.nextStep}\n            />,\n            <Success />\n        ];\n        return (\n            <Container className=\"purchase\">\n                <Row className=\"justify-content-md-center\">\n                    <Col xs={9}>\n                        <BsCard>\n                            <BsCard.Header>Quote and Buy</BsCard.Header>\n                            {paymentSteps[this.state.stepId]}\n                        </BsCard>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Purchase;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <div className=\"col-md-3 col-sm-6 col-6 p-0 float-left mb-3\">\n                        <h5 className=\"mb-4 font-weight-bold text-uppercase\">Solutions</h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../sales/sales-performance-market-pipeline.html\">Sales</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../project-management/project-management.html\">Project Management</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../workforce/workforce-organization-management-hr.html\">Workforce</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../e-commerce/e-commerce.html\"> E-Commerce</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../finance/finance-accounting-erp.html\">Finance</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../business-apps/business-apps.html\">Business Apps</a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-md-3 col-sm-6 col-6 p-0 mb-3 float-left\">\n                        <h5 className=\"mb-4 font-weight-bold text-uppercase\">Developers</h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://github.com/bananacover\">Open Source</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://stackshare.io/bananacover\">Technology</a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-md-3 col-sm-6 col-6 mb-3 p-0 float-left\">\n                        <h5 className=\"mb-4 font-weight-bold text-uppercase\">Company</h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"../about-bananacover.html\">About</a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://blog.bananacover.com\">Blog</a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-md-3 col-sm-6 col-6 mb-3 p-0 float-left\">\n                        <h5 className=\"mb-4 font-weight-bold text-uppercase\">Connect</h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://www.linkedin.com/company/bananacover\">\n                                    <i className=\"fa fa-linkedin mr-1\"></i> LinkedIn\n                                </a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://blog.bananacover.com\">\n                                    <i className=\"fa fa-medium mr-1\"></i> Medium\n                                </a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://www.facebook.com/bananacover/\">\n                                    <i className=\"fa fa-facebook mr-1\"></i> Facebook\n                                </a>\n                            </li>\n                            <li className=\"list-group-item bg-transparent border-0 p-0 mb-2\">\n                                <a href=\"https://www.youtube.com/\">\n                                    <i className=\"fa fa-youtube mr-1\"></i> YouTube\n                                </a>\n                            </li>\n                        </ul>\n\n                        <div className=\"col-md-12\">\n                            <div className=\"py-4 d-flex justify-content-center align-items-center\">\n                                <a className=\"mr-4\" href=\"../privacy.html\">\n                                    Privacy & terms\n                                </a>\n                                <a href=\"../sitemap.xml\">Sitemap</a>\n                            </div>\n                        </div>\n                    </div>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Banner from './components/Banner';\nimport CardList from './components/CardList';\nimport Purchase from './components/purchase/Purchase';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Banner />\n                <CardList />\n                <Purchase />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}